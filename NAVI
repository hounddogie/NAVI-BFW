@name NAVI BFW
#[  Outputs wether to turn left or right
    in order to be bearing at the given
    position.
    
    
     TorsoMDL = "models/hunter/blocks/cube2x2x1.mdl"
    HipMDL = "models/hunter/blocks/cube2x4x1.mdl"
    FootMDL = "models/phxtended/tri2x1x1solid.mdl"
]#
@inputs Hip:entity Torso:entity Bsl Bsr R1 R2 R3 Batter Target Targ:entity Enable AimPos:vector  #[ Pos to aim at]# 
@outputs Steer ReloadRockets Ang:angle Deploy W S Tdist M1 M2 M3 Timer Raise Facing X Lookin Y TurnUp TurnDown HardLeft HardRight  TurnLeft TurnRight Dang
@persist Tdist Persue Dang Timer Facing Fang TurnUp TurnDown Bob UDsens LRsens UDsensH  LRsensH
@trigger Enable 
if(first()){
    holoCreate(1)
    holoAng(1,entity():angles())
    holoParent(1,entity())
    holoModel(1,"models/sprops/misc/axis_plane.mdl")
    
    TRUE=1
    FALSE=0# why would you ever change these
    
}
interval(32)
function persue() {
TRUE=1
FALSE=0
UDsens=2 #u/d sensitivity
LRsens=2
UDsensH=9#15 #hard turn has an H
LRsensH=9#15
UpLimit=45 #I tried making soft limit for bfw head turning
DownLimit=-45
Close = 500 #how much personal space to give our target
    
        if (Dang < -2.0) 
            {  #am turn left
            HardRight   = FALSE
            HardLeft    = FALSE
            Facing      = FALSE
            TurnRight   = FALSE
            TurnLeft    = TRUE
            Steer       = -0.5
        if (Dang < -15.0) #am turn super left
            {
            HardLeft    = TurnLeft #good coding practice here, its a hard left
            Steer       =-1
            }
        }

        
        if (Dang > 2.0)  
        { #same as above but right instead of left
            Facing      = FALSE 
            TurnRight   = TRUE
            TurnLeft    = FALSE
            HardRight   = FALSE
            HardLeft    = FALSE
            Steer       = 0.5
            if (Dang > 15.0) 
            {
            
            HardRight   = TurnRight    
            Steer       = TRUE
            }
        }
            
        
        if(Dang>=-2&&Dang<=2) 
        { #Hey im going straight at the thing!
            Facing      = TRUE
            TurnRight   = FALSE
            TurnLeft    = FALSE    
            HardRight   = FALSE
            HardLeft    = FALSE
            Steer       = FALSE
        }
            
        if (Fang > 1.0) 
        {
            TurnUp      = TRUE
            TurnDown    = FALSE
            Lookin      = FALSE
        }
        elseif (Fang < -1.0) 
        {
            TurnUp      = FALSE
            TurnDown    = TRUE
            Lookin      = FALSE
        }
        else 
        {
            Lookin      = TRUE
            TurnUp      = FALSE
            TurnDown    = FALSE
        }
        if(TurnUp)
        {
            Y=Y+UDsens
            Y=$Y*UDsens+Y#dont ask me later, its a sort of smoother :v
        }
        if(Y>UpLimit)
            {
            Y=UpLimit#that soft quota for the head
            }
        
       elseif(TurnDown)
            {
            Y=Y-UDsens
            Y=$Y*-UDsens+Y
            }
            if(Y<DownLimit)
            {
            Y=DownLimit
            }
        
        
        
        
    if(TurnLeft){
            X=X-LRsens
            X=$X*-LRsens+X
            
        }
    elseif(TurnRight){
            X=X+LRsens
            X=$X*LRsens+X
        }
    else{
    }
    if(HardRight)
        {
        X=X+LRsensH
        X=$X*LRsensH+X
        }
    elseif(HardLeft)
        {
        X=X-LRsensH
        X=$X*-LRsensH+X
        }
    else{
        }
    

    #I don't remember my logic behind this but it works and looks like
    #I probably did this for an interesting reason... no, actually im commenting one for now.. ill see about it later
#[        if(Tdist < 500  )
        {
        Deploy=1 
        Close=Tdist 
        W=0
        }]#
        if(Tdist < Close)
        { #woah too close, backin up'
             S      =    TRUE
             W      =    FALSE
             Deploy =    TRUE
        }
     ####################################   
    
    else{
        Deploy=FALSE
        S=     FALSE
        W=     TRUE
   }

        return
}

function main() {#moving this here cus i think it would be better outside the clk
    if (~Enable) {
        if (Enable) {
            interval(32)
        } else {
            stoptimer("interval")
        }
        
    }
    if(Bsr<50)
    {
        W=0
        Steer=1
        timer("settle",2000)
    }
    if(Bsl<50)
    {
        W=0
        Steer=1
        timer("settle",2000)
    }
    if(clk("settle"))
    {
        W=0
        Steer=0
    }
    
    
    if (clk()) {
    Dang = Hip:bearing(AimPos)
    Fang = Torso:elevation(AimPos)
    #Dang = entity():bearing(AimPos)
    #Fang = entity():elevation(AimPos)    
    Tdist= Targ:pos():distance(entity():pos())
    Ang = entity():angles()
    if(R1==1&R2==1&R3==1){Ready=1}
    if(R1==0&&R2==0&&R3==0){Ready=0}
    if(Batter){
        ReloadRockets=0
        Timer++
        
         if(Timer==50&&Batter&&R1){
            M1=1
            M3=0
            Timer++
        }
        if(Timer==100&&Batter&&R2){
            M1=0
            M2=1
            Timer++
        }
        if(Timer==150&&Batter&&R3){
            M3=1
            M2=0
            Timer++
            timer("m2",800)
        }
        if(Timer>450){Timer=0}
    }
    else{M1=0 M2=0 M3=0
        Timer=0
        ReloadRockets=1}
    if(Target && Tdist>Close){
        persue()
    }
    
    if(Facing&&Lookin&&R1&&R2&&R3&&Tdist<=6500){
    Raise=1}
    else{
        Raise=0}
      
       
     
#[    if (~Enable) {
        if (Enable) {
            interval(32)
        } else {
            stoptimer("interval")
        }
        
    }]#
}
}
main()
